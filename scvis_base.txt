###id:1
###q:
What is visualization?
###a: 
The use of computer-supported, interactive, visual
representations of data to amplify cognition
###end

###id:2
###q:
Why visualize?
###a: 
– lets you see things that would rather go unnoticed (data trends, outliers, dependencies, etc.)
– gives answers faster
– lets you interact with your data, study causes and effects, etc.
– helps to deal with increasing size and diversity of data
– produces pretty, informative, & interactive pictures
###end


###id:3
###q:
Simple model of visualization
###a: 
data -> (visualization) -> (perception) <-> knowledge
		specification <- (interactiv exploration)
DATA	VISUALIZATION			USER

parentheses transform inputs to outputs
###end

###id:4
###q:
Why do we need computer in ScVis
###a: 
– Goes beyond human capacities / patience
– Scales to large datasets with many variables
	• Large datasets are infeasible to draw by hand
– Supports interactivity
###end

###id:5
###q:
Why use interactivity?
###a: 
– Handle data complexity
– A single static view can show only one aspect of data
###end

###id:6
###q:
Why depend on vision?
###a: 
– Visual system is high-bandwidth channel to brain
– Detect interesting visual structures and relationships (e.g.,
anomalies, patterns, or trends)
– Sequential vs. parallel processing (popout)
###end

###id:7
###q:
Main traits of vis representation
###a: 
Representation should be correct, accurate, and truthful
###end

###id:8
###q:
What is a lie factor
###a: 
Lie factor = Size of effect shown in graphic / Size of effect in data
###end

###id:9
###q:
Limits of visualization
###a: 
Computational limits
– Processing time / system memory
	• Display limits
– Number of pixels
– Information density: ratio of used space vs. unused whitespace
	• Human limits
– Perception, attention and memory (e.g., change blindness)
###end

###id:10
###q:
What is visualization good for?
###a: 
– Visual exploration
	• find unknown/unexpected
	• generate new hypotheses
	Nothing is known about the data
– Visual analysis (confirmative vis.)
	• verify or reject hypotheses
	• information drill-down
	There are hypotheses
– Presentation
	• show/communicate results
	“Everything” is known
###end

###id:11
###q:
Visualization pipeline
###a: 
Simulations + data bases + sensors = data acquisition ->
raw data -> {filtering, enhancement}
derived data -> {visualization, mapping}  for example 2D to,	or 3D field to
renderable representation ->  {rendering}	height field		volume
display images/video
###end

###id:12
###q:
Passive visualization flowchart. Graph
###a: 
Graph
measurements -> modeling -> simulation
measurement -> data
simulation -> data
data -> visualization
###end

###id:13
###q:
Interactive visualization flowchart. Graph
###a: 
Graph
Passive visualization -> visual analysis of images/animations
visual analysis of images/animations -> {interaction} -> visualization
###end


###id:14
###q:
Visual Steering flowchart
###a: 
Graph
As Interactive visualization +
visual analysis of images/animations -> {interaction} -> modeling
visual analysis of images/animations -> {interaction} -> simulation
###end

###id:15
###q:
Characteristics of data values
###a: 
– Attribute types (quantitative vs. qualitative)
– Domain (continuous vs. discrete)
– Value range (includes precision of values)
– Data type (categorical, scalar, vector, tensor data)
– Dimension (number of components)
– Error and uncertainty
– (physical) interpretation
###end

###id:16
###q:
Two attributes types
###a: 
- Quantitative (numerical, measurable)
- Qualitative (categorical data, not measurable)
###end

###id:17
###q:
Types of Qualitative attributes
###a: 
– Nominal
	• No natural ordering or indication of values
Ordinal
	• Logical order relation (<, >), but no relative size or degree of difference
###end

###id:18
###q:
Continuous data reconstruction
###a: 
Derive continuous representation from data given at scattered points (discrete representation)
###end

###id:18
###q:
Radial Basis Functions. Brief Descrition
###a: 
– Independent of parameter domain dimension
(1D/2D/3D)
– Each (p_i , f_i) influences f(x) based on Euclidean distance ||p_i − x||
– Nearby points have higher influence than far-away points
###end

###id:19
###q:
Radial Basis Formula
###a: 
f(x) = sum{i=1, N} (f_i * g(||p_i − x||))
g(r) decreases quickly with increasing r, for example g(r) = e^(-r^2)
###end

###id:20
###q:
General Radial Basis Formula disadvantage
###a: 
It does not enforce the values at p_i to be f_i. So we need to choose a function g.
###end

###id:21
###q:
What is the function g in Inverse distance weighting
###a: 
g(r) = 1/r^2 / sum{N}1/d^2
Inverse distance divided by sum of inverse distances
###end

###id:22
###q:
Show that using inverse distance weighting we get f(p_i) = f_i
###a: 
f(x) = sum{i=1, N} (f_i * g(||p_i − x||))
g(r) = 1/r^2 / sum{N}1/d^2
if we plug lim then it is true
f(p_i) = lim{x -> p_i} sum{i=1, N} (f_i * g(||p_i − x||))
###end

###id:23
###q:
Radial basis function approach with coefficients
###a: 
f(x) = sum{i=1, N} (w_i * g(||p_i − x||))
We get a linear system
sum{i=1, N} (w_i * g(||p_i − p_j||)) = f_j
Matrix is N*N (N is number of points)
###end

###id:24
###q:
Drawbacks of radial basis functions
###a: 
– Every sample point has influence on whole domain
– Computationally expensive (solving a system of linear equations)
– Adding a new sample requires re-solving the system
###end

###id:25
###q:
What is the approach with interpolation once triangulation is given?
###a: 
Let the scalar values at vertices be interpolated across the triangles
– I.e., piecewise linear interpolation of values at interior points
###end

###id:26
###q:
What are the traits of an "optimal" triangulation?
###a: 
– Makes triangles as “round” as possible
– Maximizes the minimum angle in the triangulation radius of in−circle
– Maximizes radius of in-circle / radius of circumcircle
###end

###id:27
###q:
What is a Delauny triangulation?
###a: 
– The circumcircle of any triangle does not contain another point of the set
	• Maximizes the minimum angle in the triangulation
	• Such a triangulation is unique (independent of the order of samples) for all but trivial cases
###end

###id:28
###q:
What is the relation of Voronoi diagram to Delaunez triangulation?
###a: 
– The geometric dual (topologically equal) of the Delaunay triangulation (or graph)
– Voronoi samples are vertices in Delauney triangulation
– Centers of circumcircles of Delauney triangulation
###end

###id:29
###q:
Data interpolation inside a triangle. What do we want to achieve?
###a: 
– The triangle lives in a 2 dim plane plane; it has 2 + 1 points (x_i, y_i) with values f_i
- Can we find a function f that interpolates f_i at the points p_i , i.e., f(p_i) = f_i
###end


###id:30
###q:
Data interpolation inside a triangle. How to build it?
###a: 
f(x) = a + bx + cy
1	x_0	   y_o			a			f_0
1	x_1	   y_1			b			f_1
1	x_2	   y_2			c			f_2
###end

###id:31
###q:
What is a barycentric interpolation for triangle?
###a: 
– Another way to interpolate inside a triangle, which yields the same linear interpolation as before
– Every point x in a triangle can be written as a barycentric combination of the vertices p_i :
x = sum(a_i * p_i) with sum(a_i) = 1 (α_i are barycentric coordinates)
– If α_i are known, then f(x) can be interpolated from values f_i at the vertices via:
f(x) = a_0*f_0 + a_1*f_1 + (1 - a_0 - a_1)f_2
a_0 = A_0 / A (the ratio of the area of the opposite triangle and the whole triangle
###end

###id:32
###q:
Barycentric interpolation for tetrahedron. Formulas
###a: 
f(x) = a + bx + cy + dz
1	x_0	   y_o		z_0			a			f_0
1	x_1	   y_1		z_1			b			f_1
1	x_2	   y_2		z_2			c			f_2
1	x_3	   y_3		z_3			d			f_3
###end

###id:33
###q:
What is a gradient of a barycentric interpolation
###a: 
f(x) = a + bx + cy + dz
Df(x) = (b, c, d) is constant
###end

###id:34
###q:
Different types of grids
###a: 
Grids: 
Cartesian or equidistant grid
	– Samples at equidistant intervals along Cartesian coordinate axes
	– Neighboring samples connected via edges
	– Cells formed by 4 (2D) or 8 (3D) samples
	– Cells and samples (grid vertices) are numbered sequentially with respect to increasing coordinates
Uniform or Regular Grid
	– Orthogonal, equidistant grid
	– dx != dy
Rectilinear Grid
	– Varying sample-distances x[i], y[j]
Curvilinear Grid
	– Non-orthogonal grid
	– Grid-points specified explicitly (P[i,j])
	– Implicit neigh
Unstructured grid
	– Grid points and neighborhood specified explicitly
	– Cells: tetrahedra, hexahedra
Scattered Data
	– Grid-free data
	– Data points given without neighborhood-relationship
	– Influence on neighborhood defined by spatial proximity
	– Scattered data interpolation
###end

###id:34
###q:
Piecewise linear interpolation in 1D
###a: 
We have (x_i, f(x_i)) and (x_i+1, f(x_i+1))
f(x) = (1-a)f(x_i) + af(x_i+1)
a = (x - x_i) / (x_i+1 - x_i)
###end


###id:35
###q:
Bilinear interpolation in 2d
###a: 
We have 4 points (x_i, y_j), ... (x_i+1, y_j+1) and values in them f_ij, f_i+1j+1
We want a value at x,y
At first we calculate f_j and f_j+1 (fix two ys) and interpolate horizontally. Then vertically. So we use alpha and beta.
###end

###id:36
###q:
Geometric interpretation of Bilinear interpolation in 2d
###a: 
coefficient before f_ij is ab, f_ij+1 (1-a)b and so on
Which are the local areas of the rectangle
###end

###id:37
###q:
Geometric interpretation of Bilinear interpolation in 2d
###a: 
coefficient before f_ij is ab, f_ij+1 (1-a)b and so on
Which are the local areas of the rectangle
###end

###id:38
###q:
What are the isolines within the cells after using bilinear interpolation.
###a: 
Hyperbolas.
f(x) = (1-a)(1-b)f_ij + ... + ab*fi+1j+1
if we make const = (1-a)(1-b)f_ij + ... + ab*fi+1j+1
f(a,b) = q + wa + zb + vab
###end

###id:39
###q:
What is a normal at the point x on an iso-surface?
###a: 
It is the gradient at this point, which is perpendicular to the tangent of the iso-surface
###end

###id:40
###q:
How to find asymptotes of the iso-lines on 2d when applying bilinear interpolation?
###a: 
Example: Turn
f(a,b) = 0.5 + 1.5a + b - 2.5ab
into the form
f(a,b) = g(a - a_0)(b - b_0) + y
Asymptotes intersect at (a_0, b_0). Value at intersection is y
###end

###id:41
###q:
How to do a trilinear interpolation?
###a: 
We do it in 3D
We take the lower side of the cube. And calculate f of the projection of our point onto this side using bilinear interpolation.
The same with the second side. Then interpolate between the sides (piecewise linear)
###end

###id:42
###q:
High quality reconstruction formula where we have values at integers. 
###a: 
g = sum(-2m, 2m)(f_i * h(x-floor[x] - i))
###end

###id:43
###q:
At what stage of a visualization pipeline are the mapping techniques used?
###a: 
derived data -> renderable representation
###end

###id:44
###q:
What does the mapping of data consist of?
###a: 
Graph primitives (can be displayed):
	points
	lines
	surfaces
	volumes
Visual channels (control appearance of graph. primitives and are used to encode data values):
	Position
	Color
	Slope/tilt
	Shape
	Size
###end

###id:45
###q:
Ranking of mapping techniques (from empirical studies)
###a: 
Most accurate/effective (properties of visual channels)
1. Position
2. Length
3. Slope/tilt angle
4. 2D Area
5. Saturation and luminance
6. 3d Volume, curvature
###end

###id:46
###q:
Steven’s psychophysical power law
###a: 
S = I^g
S - physical sensation
I - physical intensity
g > 1 overestimating
g < 1 underestimating
###end

###id:47
###q:
Steven’s psychophysical power law examples for g > 1 and g < 1
###a: 
g > 1
	electric shock
	saturation
g = 1
	length
g < 1
	area
	depth
	brightness
###end

###id:48
###q:
Reasons why visualization mapping may not work
###a: 
– Accuracy
– Pop-out (emphasize important information)
– Discriminability (how many usable steps?)
– Separability (judge each channel independently)
– Relative vs. absolute judgement
###end

###id:49
###q:
Describe the pop-out effect
###a: 
– Parallel processing on many individual channels
– Speed independent of distractor count
Good pop-out when we change only one property of visual channel (shape or color or else), not two at the same time.
###end

###id:50
###q:
Separable vs integral visual channels (example)
###a: 
Separable vis channels
Fully separable (We are able to judge each visual channel independently)
1. color + position
2. color + shape
3. size + orientation
4. width + height
5. color 1 + color 2
Integral vis channels (Major inference) Channels are viewed holistically
###end

###id:51
###q:
Describe the pop-out effect
###a: 
– Parallel processing on many individual channels
– Speed independent of distractor count
Good pop-out when we change only one property of visual channel (shape or color or else), not two at the same time.
###end

###id:52
###q:
Relative vs. absolute judgments
###a: 
Relative vs. absolute judgments
– Perception highly context-dependent
– Perceptual system mostly operates with relative judgments, not absolute ones
###end

###id:53
###q:
Weber’s Law
###a: 
just-noticeable difference is a fixed percentage of the magnitude of the stimuli
###end

###id:54
###q:
For which kind of data is bar chart good?
###a: 
– 1 categorical independent variable (domain)
– 1 quantitative dependent variable mapped to length
###end

###id:55
###q:
Difference in usage of pie chart and bar chart
###a: 
- Pie chart splits 100% into parts
- angle visual channel is less accurate than length (in bars)
###end

###id:56
###q:
Which questions to answer to decide whether to use pie chart?
###a: 
– Often bar chart is a better choice!
– Do the parts make up a meaningful whole?
– Are the parts mutually exclusive?
– Do you want to compare the parts to each other or the parts to the whole?
– How many parts do you have?
###end

###id:57
###q:
What is a stacked bar chart?
###a: 
– Quantitative data wrt 2 categorical vars (horizontal & vertical)
– Investigate part-to-whole relationship (100%)
– Length and color hue
###end

###id:58
###q:
What is a parallel sets chart?
###a: 
(from slides)
– Quantitative data wrt multiple categorical variables
– Shows connections and proportions
(my explanatiion)
We have two groups of categorical variables. Each group sums up to 100%
Each element of the first group can be decomposed into the second group.
For example:
1st group: {mathematicians, physicists, chemists}
2nd group: {male, female}
###end

###id:59
###q:
Parallel sets for 3 groups of categorical variables
###a: 
we use two parallel sets
{1} -> {2}
{2} -> {3}
For example (refugees):
{1} = {Country1, Country2, Country3}
{2} = {Accepted, rejected}
{3} = {Germany, Sweden, France}
###end

###id:60
###q:
Assumed that we have n different items that can be described with a pie/bar chart. How can we compare all of them?
What do we see using different approaches
###a: 
1. n pie charts (or bar charts) - compare values in different categories
2. stacked bar chart - compare overall values across items, but also show contribution per category
3. grouped bar charts - compare values across categories within each item
4. Layered bar charts: compare values within categories
###end

###id:61
###q:
What is a line graph?
###a: 
– Quantitative data on common scale(s) wrt. time
– Connection between points – trends, structures, groups
###end

###id:62
###q:
How to make a line graph perceptually more accurate?
###a: 
– Banking to 45 degrees
• Perceptual principle:
	most accurate angle judgment around 45°
• Pick aspect ratio
	(height/width) accordingly
###end

###id:63
###q:
What is a theme-river?
###a: 
(slides)
– Thematic changes in documents
– Occurrence per topic/category mapped to width of river band
– Less distorted around center
– Rearranging bands
(my explanation)
k topics. Each topic has an occurence frequency at each moment of time. Like in Civilization after End Game (but not normalized width)!
###end

###id:64
###q:
What is a horizon-graph?
###a: 
(slides)
– Reduces vertical space without losing precision
– Split into layered bands
– Optional mirroring
– Collapse color bands to show values in less vertical space (my explanation)
###end

###id:65
###q:
What is a histogram?
###a: 
– Special kind of bar chart
– Show frequency of occurrence of values for 1 variable
– Bin width effects representation
###end

###id:66
###q:
Box plot variation on the example of Tukey's box plot
###a: 
As a japanese candle. But the body is divided into two. So we can represent 5 things. min, med - q%, med, med + q%, max
###end

###id:67
###q:
Describe scatterplots:
###a: 
– Show correlations between 2 dependent variables
– (Qualitative no metric scale ???) & quantitative (measurable) data
– Find trends, outliers, distributions, correlations, clusters,
+ Can encode additional attributes by size, color, shape
###end

###id:68
###q:
Describe scatterplot matrix:
###a: 
– Show (all possible) combinations of dimensions/attributes in a scatterplot matrix
– Each row/column is one dimension
– Overview of correlation and patterns between data attributes
###end

###id:69
###q:
Parallel coordinates diagram technique
###a: 
– Represent multiple data variables
– Each variable is represented by a vertical axis, which are organized as evenly spaced parallel lines
– Data on each axis is normalized to min/max
– One data sample is represented by a connected set of points, one on each axis
By the way we can recognize correlation patterns between adjacent axes
###end

###id:70
###q:
Brushing in parallel coordinates diagram technique
###a: 
Marking interesting subsets (for example based on some additional variable)
###end

###id:71
###q:
Line point duality in parallel coordinates diagram
###a: 
• Line in parallel coordinates maps to point in scatterplot
• Line in scatterplot maps to point in parallel coordinates
###end

###id:72
###q:
Two ways of axes ordering in parallel coordinates
###a: 
- To enhance clustering (a lot of nearby lines, think about line point duality)
- To enhance correlation
###end

###id:73
###q:
Function plot for a 1D and 2D scalar field
###a: 
1D - Mapping of a discrete set of points to a set of lines by connecting adjacent points f(x)
2D - Mapping of a discrete set of points to a set of faces by connecting adjacent points f(x,y) - height field
###end

###id:74
###q:
What is a glyph representation
###a: 
Small independent visual objects that depict attributes of a data record
– Discretely placed in a display space
– Data attributes are represented by different visual channels (e.g., shape, color, size, orientation)
– Visual channels should be easy to distinguish and combine
– Mainly used for multivariate data
###end

###id:75
###q:
What are the star glyphs?
###a: 
– A star is composed of equally spaced spikes, originating from center
– Length of the spikes represents value of respective attribute
– End of rays connected by line
###end

###id:76
###q:
What are the Chernoff faces?
###a: 
Data attributes represented by features of a face (eye position, nose length, mouth form, etc.)
###end

###id:77
###q:
Glyph complexity vs. placement density
###a: 
Dense placement & simple glyphs
Sparse placement & complex glyphs
###end

###id:78
###q:
Glyph stick figures
###a: 
– 2D figure with limbs
– Data encoded by
• length
• line thickness
• angle between lines
###end

###id:79
###q:
Glyph Local flow probe
###a: 
– Depicts multiple flow characteristics
– Large & complex glyphs need to be sparsely placed to avoid occlusion
###end

###id:80
###q:
Examples of perceptually uniform channels for quantitative data and non-uniform
###a: 
non - Rainbow colormap
yes - Green-red isoluminant, or white to black
###end

###id:81
###q:
Goals of color mapping
###a: 
– Emphasize a specific target in a crowded display
– Provide warning signals or signify low probability events
– Group, categorize, and chunk information
###end

###id:82
###q:
Possible problems of color mapping
###a: 
Distract the user when inadequately used
Dependent on viewing and stimulus conditions
Ineffective for color deficient individuals
Results in information overload
###end

###id:83
###q:
Color is context dependent. Example
###a: 
Take two panes, of significantly different colors and paint a line of one color on them. It may look different.
###end

###id:84
###q:
What is HSB?
###a: 
Hue, Saturation, Brightness.
– Hue: dominant wavelength
– Saturation: pureness, amount of white light
– Brightness: intensity of light
###end

###id:85
###q:
What is preattentive processing? Give an example
###a: 
– Colors are searched preattentively
– Preattentive processing: automatic and parallel detection of basic features in visual information (200-250 msec)
###end

###id:86
###q:
Things to know when mapping data to colors
###a: 
- Added benefits of parallelism in search begin to reverse with the use of more than six colors, so that search time increases with each color added beyond six
- Higher contrast sensitivity in luminance than in chrominance
- We can only distinguish a limited number of colors /brightness levels
- size of colored line matters
- luminance matters as well
– Make sure contrast is high (difference in color of background and letters
###end

###id:87
###q:
Explain the notions of luminance and chrominance
###a: 
Luma represents the achromatic image, while the chroma components represent the color information
###end

###id:88
###q:
How color mapping varies?
###a: 
– categorical vs. ordered
– sequential vs. diverging
– discrete vs. continuou
###end

###id:89
###q:
What is a transfer function?
###a: 
T : scalar value -> color value
• Color values are stored in a color table
• For a data value, the color at the corresponding entry in the table is used
###end

###id:90
###q:
Pre-shading and post-shading in color mapping
###a: 
– Pre-shading
	• Assign color values to vertices
	• Interpolate between vertex colors
– Post-shading
	• Interpolate between scalar values given at vertices
	• Assign color values to interpolated scalar values
###end

###id:91
###q:
What is an isoline for f(x,y)?
###a: 
An isoline (iso-contour) consists of all points at which the data has a specific value c
{(x,y) : f(x,y) = c }
###end

###id:92
###q:
Properties of isolines
###a: 
– Isolines are always closed curves (except when they exit the domain)
– Isolines never (self-)intersect, thus are nested
	• What would happen if a point belonged to 2 different isolines
– Isolines are always orthogonal to scalar field’s gradient
###end

###id:93
###q:
What is a voxel?
###a: 
A volume element. Point sample in 3D. Consists of 8 points
###end

###id:94
###q:
What does a volumetric object consist of?
###a: 
– A shape (given by the geometry of the 3D grid)
– An appearance (given by the data values)
###end

###id:95
###q:
When is it useful to have a volumetric representation?
###a: 
– Essential information in the interior
– Cannot be described by a surface in general (e.g. fire, clouds, gaseous phenomena)
###end

###id:96
###q:
Direct volume rendering. Physical interpretation
###a: 
Consider the data as a semi-transparent gel with physical properties and directly get a 3D representation of it.
considers the physics of light transport in a dense medium
###end

###id:97
###q:
What has to be done before direct volume rendering visualization?
###a: 
The data values are mapped to visual properties like color and opacity
– Data value -> color: f(i) -> C(i)
– Data value -> opacity: f(i) -> alpha(i)
Data value can be for example material density
Mapping is performed via a transfer function
###end

###id:98
###q:
What is opacity?
###a: 
0 - absolutely transparent
1 - absolutely non-transparent (mithril)
###end

###id:99
###q:
What are ray-based models based on?
###a: 
– The collection of light along straight rays is based on an emission/absorption model
– Assumption: Volume consists of small particles
– Each voxel emits light of the color which is assigned to it, and absorbs light according to it’s opacity
###end

###id:100
###q:
Volume rendering integral
###a: 
C(s) = INT{s0, s}(C(s')aINT) ds'
aINT = e^ (-INT{s', s}alpha(t) dt)
###end

###id:101
###q:
Numerical approximation of the volume rendering integral. Description
###a: 
– Volume is resampled at equidistant intervals along the ray (integral as a sum over samples)
– Sample values are tri-linearly interpolated
– Apply transfer function
###end

###id:102
###q:
WHat is compositing in DVR?
###a: 
Accumulation of color and opacity along rays
###end

###id:103
###q:
Front-back ray-casting (iterative scheme) strategy. With explanation
###a: 
We take the opacity accumulated (a_in) and add alpha from what's left (1 - a_in)
a_out = a_in + (1 - a_in)a
We take the color so far (C_in) and add the current color C multiplied by the jump in opacity (a_out - a_in)
C_out = C_in + (a_out - a_in)C
###end

###id:104
###q:
How to remove ringing artifacts in DVR?
###a: 
- Solution: Increase sampling rate to Nyquist frequency at least 2 samples per voxel
- Remove artifacts by stochastic jittering of ray-start position
###end

###id:105
###q:
Enumerate variations of compositing schemes and briefly discuss them:
###a: 
– Surface rendering / first hit: stop ray traversal if an iso-surface is hit, and shade the surface points. Produces same result as marching cubes, but with higher accuracy
– Average: simply accumulate colors but do not account for opacity. Produces an X-ray image
– Maximum: only takes the maximum color along the ray and displays it. Often used for magnetic resonance angiograms. Good to extract vessel structures
###end

###id:106
###q:
Why do we need to simulate reflection of light and effect on color?
###a: 
To emphasize iso-surface shape
###end

###id:107
###q:
The Phong illumination model
###a: 
– Considers ambient light and point lights as well as the material color and reflection properties
– Ambient light: background light, constant everywhere
– Diffuse reflector reflects equally into all directions
– Specular reflector reflects mostly into the mirror direction
###end

###id:108
###q:
Ambient light in the Phong model. Formula
###a: 
C = k_a C_a O_d
– Background light, constant everywhere
- k_a ambient reflection coefficient [0, 1]
- C_a color of the ambient light
- O_d object color
###end

###id:109
###q:
Diffuse reflection in the Phong model. Formula
###a: 
C = k_d C_p O_d cosT
- k_d diffuse reflection coefficient of the object [0, 1]
- C_p color of the point light
- O_d color of the object
- T angle between light vector (l) and normal (n)
###end

###id:110
###q:
Specular reflection in the Phong model. Formula
###a:
C = k_s C_p O_d (cosP)^n
- k_s specular reflection coefficient of the object [0, 1]
- C_p color of the point light
- O_d color of the object
- P angle between reflection vector (r) and viewer (v)
- n shininess factor
###end

###id:111
###q:
Flow visualization - classification
###a:
C = k_s C_p O_d (cosP)^n
- k_s specular reflection coefficient of the object [0, 1]
- C_p color of the point light
- O_d color of the object
- P angle between reflection vector (r) and viewer (v)
- n shininess factor
###end
